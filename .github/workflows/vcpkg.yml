name: SolveSpace
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
          submodules: true
      - name: Run vcpkg
        if: ${{matrix.os == 'windows-latest'}}
        uses: lukka/run-vcpkg@v4
        with:
          vcpkgArguments: cairo:x64-windows pixman:x64-windows
          vcpkgDirectory: "${{ github.workspace }}/extlib/vcpkg"
      - name: Run vcpkg
        if: ${{matrix.os == 'ubuntu-latest'}}
        uses: lukka/run-vcpkg@v4
        with:
          vcpkgArguments: cairo:x64-linux pixman:x64-linux
          vcpkgDirectory: "${{ github.workspace }}/extlib/vcpkg"
      - name: Run vcpkg
        if: ${{matrix.os == 'macos-latest'}}
        uses: lukka/run-vcpkg@v4
        with:
          vcpkgArguments: cairo:x64-osx pixman:x64-osx
          vcpkgDirectory: "${{ github.workspace }}/extlib/vcpkg"
      - name: Install Ubuntu Deps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: .travis/install-debian.sh
      - name: Install macOS Deps
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install llvm@9
      - uses: lukka/get-cmake@latest
      - name: Run CMake with Ninja
        uses: lukka/run-cmake@v3
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/CMakeLists.txt"
          useVcpkgToolchainFile: true
          cmakeAppendedArgs: "-GNinja -DCMAKE_BUILD_TYPE=Release"
          buildWithCMakeArgs: "-- -v"
          buildDirectory: "${{ github.workspace }}/build/"
